{"version":3,"sources":["../../src/pages/chat-room/chat-room.module.ts","../../src/pages/chat-room/chat-room.ts","../../src/models/message.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACL;AAU3C;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAR9B,uEAAQ,CAAC;YACN,YAAY,EAAE;gBACV,gEAAY;aACf;YACD,OAAO,EAAE;gBACL,sEAAe,CAAC,QAAQ,CAAC,gEAAY,CAAC;aACzC;SACJ,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZsB;AACI;AACR;AACA;AACQ;AACL;AACI;AACT;AACP;AAQxC;IAUI,sBAAmB,QAAsB,EAAS,IAAkB,EAAS,OAAsB,EAAS,SAAoB;QAA7G,aAAQ,GAAR,QAAQ,CAAc;QAAS,SAAI,GAAJ,IAAI,CAAc;QAAS,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAPzH,SAAI,GAAG,kEAAI,CAAC;QACX,WAAM,GAAW,IAAI,4DAAM,EAAE,CAAC;QAC9B,cAAS,GAAS,IAAI,0DAAI,EAAE,CAAC;QAE7B,UAAK,GAAW,EAAE,CAAC;QACnB,cAAS,GAAY,IAAI,CAAC;IAIlC,CAAC;IAED,qCAAc,GAAd;QAAA,iBAUC;QATG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC3C,0EAAQ,CACJ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CACnC,CAAC,SAAS,CAAC,UAAC,EAAS;gBAAR,eAAO;YACjB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,SAAS,GAAY,OAAO,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAgB,GAAhB;QACI,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,qCAAc,GAAd;QAAA,iBAIC;QAHG,UAAU,CAAC;YACP,KAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,6BAAM,GAAN;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,OAAO,GAAY,IAAI,gEAAO,EAAE,CAAC;YACrC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YAClC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;YACpB,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QACpB,CAAC;IACL,CAAC;IA7CmB;QAAnB,yEAAS,CAAC,8DAAO,CAAC;kCAAU,8DAAO;iDAAC;IAF5B,YAAY;QALxB,wEAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;WACG;SAChC,CAAC;qBAYkI;OAVvH,YAAY,CAiDxB;IAAD,CAAC;AAAA;SAjDY,YAAY,gB;;;;;;;;AChBzB;AAAA;IAAA;QACI,SAAI,GAAW,EAAE,CAAC;QAClB,OAAE,GAAW,EAAE,CAAC;QAChB,YAAO,GAAW,EAAE,CAAC;IAEzB,CAAC;IAAD,cAAC;AAAD,CAAC","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChatRoomPage } from './chat-room';\n\n@NgModule({\n    declarations: [\n        ChatRoomPage,\n    ],\n    imports: [\n        IonicPageModule.forChild(ChatRoomPage),\n    ],\n})\nexport class ChatRoomPageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat-room/chat-room.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { Util } from \"../../providers/util/util\";\nimport { Friend, User } from \"../../models/user\";\nimport { HttpProvider } from \"../../providers/http/http\";\nimport { forkJoin } from 'rxjs/observable/forkJoin';\nimport { MessageMocks } from \"../../mocks/messageMocks\";\nimport { Message } from \"../../models/message\";\nimport { Content } from 'ionic-angular';\n\n@IonicPage()\n@Component({\n    selector: 'page-chat-room',\n    templateUrl: 'chat-room.html',\n})\n\nexport class ChatRoomPage {\n\n    @ViewChild(Content) content: Content;\n    public Util = Util;\n    private friend: Friend = new Friend();\n    private myProfile: User = new User();\n    private messages;\n    private input: string = '';\n    private isLoading: boolean = true;\n\n    constructor(public msgMocks: MessageMocks, public http: HttpProvider, public navCtrl: NavController, public navParams: NavParams) {\n\n    }\n\n    ionViewDidLoad() {\n        this.isLoading = true;\n        this.messages = this.msgMocks.items;\n        this.friend = this.navParams.get('friend');\n        forkJoin(\n            this.http.get('my-profile.json')\n        ).subscribe(([profile]) => {\n            this.isLoading = false;\n            this.myProfile = < User > profile;\n        });\n    }\n\n    ionViewWillEnter(): void {\n        this.scrollToBottom();\n    }\n\n    scrollToBottom() {\n        setTimeout(() => {\n            this.content.scrollToBottom(300);\n        });\n    }\n\n\n    doSend() {\n        if (this.input.length > 0) {\n            let message: Message = new Message();\n            message.to = this.friend.username;\n            message.from = 'me';\n            message.content = this.input;\n            this.msgMocks.add(message);\n            this.scrollToBottom();\n            this.input = '';\n        }\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat-room/chat-room.ts","export class Message {\n    from: string = '';\n    to: string = '';\n    content: string = '';\n    time: Date;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/message.ts"],"sourceRoot":""}