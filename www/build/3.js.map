{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n    declarations: [\n        LoginPage,\n    ],\n    imports: [\n        IonicPageModule.forChild(LoginPage),\n        TranslateModule.forChild()\n    ],\n    exports: [\n        LoginPage\n    ]\n})\nexport class LoginPageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { User } from \"../../models/user\";\nimport { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UserProvider } from \"../../providers/user/user\";\nimport { HttpProvider } from \"../../providers/http/http\";\nimport { IonicPage, NavController, MenuController } from 'ionic-angular';\n\n@IonicPage()\n@Component({\n    selector: 'page-login',\n    templateUrl: 'login.html'\n})\n\nexport class LoginPage {\n\n    // Cette variable nous permets de pre-remplire les formulaire de login ou register. Voir la class User\n    account: User = new User();\n    loginErrorString: string; // Message d'erreur de connection\n    registerErrorString: string; // Message d'erreur d'inscription\n    opt: string = 'signin'; // voir code html (lgn: 9 - value=\"signin\")\n\n    constructor(\n        public http: HttpProvider,\n        public navCtrl: NavController,\n        public menuCtrl: MenuController,\n        public userProvider: UserProvider,\n        public translateService: TranslateService\n    ) {\n        this.menuCtrl.enable(false); // Cacher le menu se trouvant sur la gauche (dans la page main.html)\n        // Traduction du message d'erreur\n        this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n            this.loginErrorString = value;\n        })\n    }\n\n\n    // Mode de connection avec le fichier my-profile.json\n    doLogin_v1() {\n        this.http.get('my-profile.json').subscribe(\n            (profile: User) => { // Requet asyn. sur le fichier my-profile.json qui ce situe dans asset mocks et le contenu du fichier est mise dans la variable profile\n\n                this.userProvider.user = < User > profile; // Ajout du profile user dans la class UserProvider grace au setter. Grace a sa, nous pouvont recuperer le profile Ã  tout moments vu qu'il est stocker dans la class UserProvider\n\n                /*\n                    if( users.email === this.account.email && users.password === this.account.password )\n                        return true;\n                    else\n                        return false;\n                */\n                let isGood = (profile.email === this.account.email && profile.password === this.account.password) ? true : false\n\n                if (isGood)\n                    this.navCtrl.setRoot('ListFriendsPage'); // setRoot -> permet de supprimer toutes les vues de la stack et de naviguer vers la root page.\n\n                else {\n                    this.account.email = 'mike.sylvestre@lyknowledge.io';\n                    this.account.password = 'themike';\n                    this.translateService.get('LOGIN_ERROR').subscribe((value) => { // translateService permet d'effectuer du multi-langue.\n                        // subscribe -> concept des PROMISE - OBSERVABLE, le traitement ce fait de manier asynch.\n                        this.loginErrorString = value; // Affichage du message d'erreur dans la page html via la variable \"loginErrorString\"\n                    })\n                }\n                // navCtrl -> Permmet de naviger sur plusieurs page\n            });\n    }\n\n    doLogin() {\n        this.userProvider.loginUser(this.account.email, this.account.password).then(\n            isConnect => {\n                if (isConnect)\n                    this.navCtrl.setRoot('ListFriendsPage'); // setRoot -> permet de supprimer toutes les vues de la stack et de naviguer vers la root page.\n                else\n                    this.loginErrorString = \"Coonnection error\";\n            }\n        )\n    }\n\n    doRegister() {\n        this.userProvider.registerUser(this.account).then(\n            isConnect => {\n                if (isConnect)\n                    this.navCtrl.setRoot('ListFriendsPage'); // setRoot -> permet de supprimer toutes les vues de la stack et de naviguer vers la root page.\n                else\nthis.registerErrorString                                                                                                                                                                                                 = \"Coonnection error\";\n            }\n        )\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}